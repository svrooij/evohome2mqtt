name: Run tests and publish

on:
  push:
    branches:
      - master
      - beta
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Use node 12
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Install depencencies
      run: npm ci
    # - name: Build library
    #   run: npm run build
    - name: Run tests
      run: npm run test
    # - name: Send data to Coveralls
    #   uses: coverallsapp/github-action@master
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    - uses: svrooij/secret-gate-action@v1
      id: mygate
      with:
        inputsToCheck: 'NPM_TOKEN'
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v2
      if: steps.mygate.outputs.inputsChecked == 'true'
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    - uses: svrooij/secret-gate-action@v1
      id: dockergate
      with:
        inputsToCheck: 'DOCKER_USERNAME,DOCKER_PASSWORD'
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    - name: Set up Docker Buildx
      id: buildx
      if: steps.semantic.outputs.new_release_published == 'true' && steps.dockergate.outputs.inputsChecked == 'true'
      uses: crazy-max/ghaction-docker-buildx@v2
      with:
        buildx-version: latest
        skip-cache: false
        qemu-version: latest
    - name: Docker login
      if: steps.semantic.outputs.new_release_published == 'true' && steps.dockergate.outputs.inputsChecked == 'true'
      run:
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish to docker with buildx as latest
      if: steps.semantic.outputs.new_release_published == 'true' && github.ref == 'refs/heads/master' && steps.dockergate.outputs.inputsChecked == 'true'
      run: |
        docker buildx build \
          --platform linux/amd64,linux/arm/v7,linux/arm64 \
          --push \
          -t $GITHUB_REPOSITORY:latest \
          -t $GITHUB_REPOSITORY:${{ steps.semantic.outputs.new_release_version }} \
          --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
          --build-arg BUILD_VERSION=${{ steps.semantic.outputs.new_release_version }} \
          --build-arg VSC_REF=$(echo ${GITHUB_SHA} | cut -c1-8) \
          .
      